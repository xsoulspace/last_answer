
-- USERS
create table public.users (
  id          uuid not null primary key, -- UUID from auth.users
  username    text,
  status      user_status default 'offline'::public.user_status
);
comment on table public.users is 'Profile data for each user.';
comment on column public.users.id is 'References the internal Supabase Auth user.';

-- USER ROLES
create table public.user_roles (
  id        bigint generated by default as identity primary key,
  user_id   uuid references public.users(id) on delete cascade not null,
  role      app_role not null,
  unique (user_id, role)
);
comment on table public.user_roles is 'Application roles for each user.';

-- ROLE PERMISSIONS
create table public.role_permissions (
  id           bigint generated by default as identity primary key,
  role         app_role not null,
  permission   app_permission not null,
  unique (role, permission)
);
comment on table public.role_permissions is 'Application permissions for each role.';


-- FOLDERS
create table public.folders (
  -- COMMON FIELDS
  id            uuid gen_random_uuid() primary key not null,
  created_at    timestamp with time zone default timezone('utc'::text, now()) not null,
  updated_at    timestamp with time zone default timezone('utc'::text, now()) not null,

  title         text not null,

  -- RELATION FIELDS
  owner_id      uuid references public.users(id) on delete cascade not null,

);
comment on table public.folders is 'Folders to keep projects created by users.';
comment on column public.folders.owner_id is 'References the internal Supabase Auth user via user.id.';


-- IDEA PROJECT. QUESTIONS
create table public.idea_project_questions (
  -- COMMON FIELDS
  id            uuid gen_random_uuid() primary key not null,
  title         text not null default
);
comment on table public.idea_project_questions is 'Questions for answers for Project type Idea. Created by server side only.';


-- PROJECTS
create table public.projects (
  -- COMMON FIELDS
  id            uuid gen_random_uuid() primary key not null,
  created_at    timestamp with time zone default timezone('utc'::text, now()) not null,
  updated_at    timestamp with time zone default timezone('utc'::text, now()) not null,
  
  is_completed  boolean not null default false,
  title         text not null default,

  -- RELATION FIELDS
  user_id       uuid references public.users(id) on delete cascade not null,
  folder_id     uuid references public.folders(id) on delete cascade not null,
  project_type  project_type default 'note'::public.project_type,

  -- NOTE TYPE RELATED FIELDS
  note                text not null,
  characters_limit    int,   
  
  -- IDEA TYPE RELATED FIELDS
  new_answer_text     text not null,
  new_question_id     uuid references public.idea_project_questions on delete restrict not null,
  -- STORY TYPE RELATED FIELDS
  -- noop. yet TODO
);
comment on table public.projects is 'Projects created by user.';

-- IDEA PROJECT. ANSWERS
create table public.idea_project_answers (
  -- COMMON FIELDS
  id            uuid gen_random_uuid() primary key not null,
  created_at    timestamp with time zone default timezone('utc'::text, now()) not null,
  
  text         text not null default,

  -- RELATION FIELDS
  project_id    uuid references public.projects on delete cascade not null,
  question_id   uuid references public.idea_project_questions on delete restrict not null
);
comment on table public.idea_project_answers is 'Answers for Project type Idea. Created by user.';
