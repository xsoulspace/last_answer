name: lastanswer
description: Fast ideas brainstorming tool and quick notes

# The following line prevents the package from being accidentally published to
# pub.dev using `pub publish`. This is preferred for private packages.
publish_to: "none" # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 3.10.1+15

environment:
  sdk: ">=2.14.0 <3.0.0"

# to update use flutter pub upgrade --major-versions
dependencies:
  flutter:
    sdk: flutter

  flutter_localizations:
    sdk: flutter

  shared_preferences: ^2.0.8
  json_annotation: ^4.3.0
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.3
  # To build use flutter pub run build_runner build
  hive: ^2.0.4
  hive_flutter: ^1.1.0
  universal_io: ^2.0.4
  share_plus: ^3.0.4
  uuid: ^3.0.5
  flutter_hooks: ^0.18.0
  flutter_riverpod: ^1.0.0-dev.7
  hooks_riverpod: ^1.0.0-dev.7
  riverpod: ^1.0.0-dev.7
  equatable: ^2.0.3
  google_fonts: ^2.1.0
  flutter_svg: ^0.23.0+1
  flare_flutter: ^3.0.2
  collection: ^1.15.0
  quiver: ^3.0.0
  path_to_regexp: ^0.4.0
  package_info_plus: ^1.3.0
  recase: ^4.0.0
  rxdart: ^0.27.2
  flutter_portal: ^0.4.0
  blur: ^3.0.0
  url_launcher: ^6.0.12
  get_it: ^7.2.0
  flutter_slidable: ^1.0.0-dev.9
  flutter_native_splash: ^1.3.1

dev_dependencies:
  flutter_launcher_icons: ^0.9.2
  flutter_test:
    sdk: flutter
  json_serializable: ^6.0.0
  hive_generator: ^1.1.1
  build_runner: ^2.1.2
  flutter_lints: ^1.0.4
  flutter_gen: ^4.0.0
  flutter_gen_runner: ^4.0.0
  mocktail: ^0.2.0

# flutter pub run flutter_launcher_icons:main
# generate for macos https://appicon.co
flutter_icons:
  image_path: "assets/icons/logo.png"
  ios: true
  android: true
  remove_alpha_ios: true

# For information see the following page:
# https://pub.dev/packages/flutter_gen
flutter_gen:
  # output: lib/gen/ # Optional (default: lib/gen/)
  # line_length: 80 # Optional (default: 80)
  # Optional
  integrations:
    flutter_svg: true
    flare_flutter: true

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec
# The following section is specific to Flutter.
flutter:
  generate: true

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  assets:
    - assets/
    - assets/icons/
    - google_fonts/

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg
  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.
  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages
  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: IBMPlexSans
      fonts:
        - asset: google_fonts/IBMPlexSans-Thin.ttf
          weight: 100
        - asset: google_fonts/IBMPlexSans-Light.ttf
          weight: 300
        - asset: google_fonts/IBMPlexSans-Regular.ttf
          weight: 400
        - asset: google_fonts/IBMPlexSans-Medium.ttf
          weight: 500
        - asset: google_fonts/IBMPlexSans-SemiBold.ttf
          weight: 700
        - asset: google_fonts/IBMPlexSans-Bold.ttf
          weight: 900
    - family: NotoColorEmoji
      fonts:
        - asset: google_fonts/NotoColorEmoji.ttf
    - family: NotoSans
      fonts:
        - asset: google_fonts/NotoSans-Regular.ttf
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
flutter_intl:
  enabled: true

# https://pub.dev/packages/flutter_native_splash
flutter_native_splash:
  # This package generates native code to customize Flutter's default white native splash screen
  # with background color and splash image.
  # Customize the parameters below, and run the following command in the terminal:
  # flutter pub run flutter_native_splash:create
  # To restore Flutter's default white splash screen, run the following command in the terminal:
  # flutter pub run flutter_native_splash:remove

  # color or background_image is the only required parameter.  Use color to set the background
  # of your splash screen to a solid color.  Use background_image to set the background of your
  # splash screen to a png image.  This is useful for gradients. The image will be stretch to the
  # size of the app. Only one parameter can be used, color and background_image cannot both be set.
  color: "#F8F9F7"
  #background_image: "assets/background.png"

  # Optional parameters are listed below.  To enable a parameter, uncomment the line by removing
  # the leading # character.

  # The image parameter allows you to specify an image used in the splash screen.  It must be a
  # png file and should be sized for 4x pixel density.
  #image: assets/splash.png

  # The color_dark, background_image_dark, and image_dark are parameters that set the background
  # and image when the device is in dark mode. If they are not specified, the app will use the
  # parameters from above. If the image_dark parameter is specified, color_dark or
  # background_image_dark must be specified.  color_dark and background_image_dark cannot both be
  # set.
  color_dark: "#212121"
  #background_image_dark: "assets/dark-background.png"
  #image_dark: assets/splash-invert.png

  # The android, ios and web parameters can be used to disable generating a splash screen on a given
  # platform.
  #android: false
  #ios: false
  #web: false

  # The position of the splash image can be set with android_gravity, ios_content_mode, and
  # web_image_mode parameters.  All default to center.
  #
  # android_gravity can be one of the following Android Gravity (see
  # https://developer.android.com/reference/android/view/Gravity): bottom, center,
  # center_horizontal, center_vertical, clip_horizontal, clip_vertical, end, fill, fill_horizontal,
  # fill_vertical, left, right, start, or top.
  #android_gravity: center
  #
  # ios_content_mode can be one of the following iOS UIView.ContentMode (see
  # https://developer.apple.com/documentation/uikit/uiview/contentmode): scaleToFill,
  # scaleAspectFit, scaleAspectFill, center, top, bottom, left, right, topLeft, topRight,
  # bottomLeft, or bottomRight.
  #ios_content_mode: center
  #
  # web_image_mode can be one of the following modes: center, contain, stretch, and cover.
  #web_image_mode: center

  # To hide the notification bar, use the fullscreen parameter.  Has no affect in web since web
  # has no notification bar.  Defaults to false.
  # NOTE: Unlike Android, iOS will not automatically show the notification bar when the app loads.
  #       To show the notification bar, add the following code to your Flutter app:
  #       WidgetsFlutterBinding.ensureInitialized();
  #       SystemChrome.setEnabledSystemUIOverlays([SystemUiOverlay.bottom, SystemUiOverlay.top]);
  #fullscreen: true

  # If you have changed the name(s) of your info.plist file(s), you can specify the filename(s)
  # with the info_plist_files parameter.  Remove only the # characters in the three lines below,
  # do not remove any spaces:
  #info_plist_files:
  #  - 'ios/Runner/Info-Debug.plist'
  #  - 'ios/Runner/Info-Release.plist'
